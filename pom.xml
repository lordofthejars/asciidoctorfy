<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.lordofthejars.asciidoctor</groupId>
	<artifactId>asciidoctorfy</artifactId>
	<version>0.1.0</version>
    
    <name>asciidoctorfy</name>
    <description>NoSQL is a JUnit extension targeted to nosql-driven projectsAsciidoctorfy is an small java project which reads a java source file, extracts the comments between /* and / sequentially from all over the file and stores them inside an output AsciiDoc file.</description>
    <url>https://github.com/lordofthejars/asciidoctorfy</url>
    <issueManagement>
        <system>github</system>
        <url>https://github.com/lordofthejars/asciidoctorfy</url>
    </issueManagement>
    <licenses>
        <license>
            <name>Apache License Version 2.0</name>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:git@github.com:lordofthejars/asciidoctorfy.git</connection>
        <developerConnection>scm:git:git@github.com:lordofthejars/asciidoctorfy.git</developerConnection>
        <url>scm:git:git@github.com:lordofthejars/asciidoctorfy.git</url>
    </scm>

    <developers>
        <developer>
            <id>asotobu</id>
            <name>Alex Soto Bueno</name>
            <email>asotobu@gmail.com</email>
        </developer>
    </developers>

	<properties>
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>
		<version.crest>1.0-SNAPSHOT</version.crest>
		<version.junit>4.11</version.junit>
		<version.antlrjavaparser>1.0.14</version.antlrjavaparser>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.tomitribe</groupId>
			<artifactId>tomitribe-crest</artifactId>
			<version>${version.crest}</version>
		</dependency>

		<!-- Add tomitribe-crest-xbean if you want classpath scanning for @Command -->
		<dependency>
			<groupId>org.tomitribe</groupId>
			<artifactId>tomitribe-crest-xbean</artifactId>
			<version>${version.crest}</version>
		</dependency>

		<dependency>
			<groupId>com.github.antlrjavaparser</groupId>
			<artifactId>antlr-java-parser</artifactId>
			<version>${version.antlrjavaparser}</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${version.junit}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<repositories>
		<repository>
			<id>sonatype-nexus-snapshots</id>
			<name>Sonatype Nexus Snapshots</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<build>
		<defaultGoal>install</defaultGoal>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>org.tomitribe.crest.Main</mainClass>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<distributionManagement>
		<repository>
			<id>localhost</id>
			<url>file://${basedir}/target/repo/</url>
		</repository>
		<snapshotRepository>
			<id>localhost</id>
			<url>file://${basedir}/target/snapshot-repo/</url>
		</snapshotRepository>
	</distributionManagement>


</project>